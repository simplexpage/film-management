{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a film management service.",
        "title": "Film management service API",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/films": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "View all films",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Film"
                ],
                "summary": "View all films",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Star Wars",
                        "description": "title",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2023-12-11 or 2023-10-11:2023-12-11",
                        "description": "date",
                        "name": "release_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "action,adventure",
                        "description": "genres",
                        "name": "genres",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "title.asc or title.desc or release_date.asc or release_date.desc",
                        "description": "sort",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "10",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "1",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/endpoints.ViewAllFilmsResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Data Validation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseValidation"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/films/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a film",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Film"
                ],
                "summary": "Add a film",
                "parameters": [
                    {
                        "description": "Add Film Form",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoints.AddFilmRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/endpoints.AddFilmResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Data Validation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseValidation"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/films/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "View a film",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Film"
                ],
                "summary": "View a film",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Film UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/endpoints.ViewFilmResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a film",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Film"
                ],
                "summary": "Update a film",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Film UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update film form",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoints.UpdateFilmRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/endpoints.UpdateFilmResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Data Validation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseValidation"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a film",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Film"
                ],
                "summary": "Delete a film",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Film UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/endpoints.DeleteFilmResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Data Validation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseValidation"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Health Check",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Common"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.HealthCheckResponse"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login form",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoints.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/endpoints.LoginResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Data Validation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseValidation"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "Registration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Registration",
                "parameters": [
                    {
                        "description": "Register form",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoints.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/endpoints.RegisterResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Data Validation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseValidation"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "endpoints.AddFilmRequest": {
            "type": "object",
            "required": [
                "casts",
                "director",
                "genres",
                "releaseDate",
                "synopsis",
                "title"
            ],
            "properties": {
                "casts": {
                    "type": "array",
                    "maxItems": 10,
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "John Doe",
                        "Jane Doe",
                        "Foo Bar",
                        "Baz Quux"
                    ]
                },
                "director": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 3,
                    "example": "John Doe"
                },
                "genres": {
                    "type": "array",
                    "maxItems": 5,
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "action",
                        "adventure",
                        "sci-fi"
                    ]
                },
                "releaseDate": {
                    "type": "string",
                    "example": "2021-01-01"
                },
                "synopsis": {
                    "type": "string",
                    "maxLength": 1000,
                    "minLength": 10,
                    "example": "This is a synopsis."
                },
                "title": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3,
                    "example": "Garry Potter"
                }
            }
        },
        "endpoints.AddFilmResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "$ref": "#/definitions/endpoints.ItemFilm"
                }
            }
        },
        "endpoints.DeleteFilmResponse": {
            "type": "object"
        },
        "endpoints.ItemAllFilms": {
            "type": "object",
            "properties": {
                "casts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "John Doe",
                        "Jane Doe",
                        "Foo Bar"
                    ]
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01 00:00:00"
                },
                "director": {
                    "type": "string",
                    "example": "John Doe"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "action",
                        "adventure",
                        "sci-fi"
                    ]
                },
                "release_date": {
                    "type": "string",
                    "example": "2021-01-01"
                },
                "synopsis": {
                    "type": "string",
                    "example": "This is a synopsis."
                },
                "title": {
                    "type": "string",
                    "example": "Garry Potter"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01 00:00:00"
                },
                "uuid": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                }
            }
        },
        "endpoints.ItemCreator": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "example": "test"
                },
                "uuid": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                }
            }
        },
        "endpoints.ItemFilm": {
            "type": "object",
            "properties": {
                "casts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "John Doe",
                        "Jane Doe",
                        "Foo Bar",
                        "Baz Quux"
                    ]
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01 00:00:00"
                },
                "director": {
                    "type": "string",
                    "example": "John Doe"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "action",
                        "adventure",
                        "sci-fi"
                    ]
                },
                "release_date": {
                    "type": "string",
                    "example": "2021-01-01"
                },
                "synopsis": {
                    "type": "string",
                    "example": "This is a synopsis."
                },
                "title": {
                    "type": "string",
                    "example": "Garry Potter"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01 00:00:00"
                },
                "uuid": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                }
            }
        },
        "endpoints.ItemViewFilm": {
            "type": "object",
            "properties": {
                "casts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Tim Robbins",
                        "Morgan Freeman"
                    ]
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01 00:00:00"
                },
                "creator": {
                    "$ref": "#/definitions/endpoints.ItemCreator"
                },
                "director": {
                    "type": "string",
                    "example": "Frank Darabont"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "drama",
                        "crime"
                    ]
                },
                "release_date": {
                    "type": "string",
                    "example": "1994-09-23"
                },
                "synopsis": {
                    "type": "string",
                    "example": "This is a synopsis."
                },
                "title": {
                    "type": "string",
                    "example": "The Shawshank Redemption"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01 00:00:00"
                },
                "uuid": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                }
            }
        },
        "endpoints.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 8,
                    "example": "12345678"
                },
                "username": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 5,
                    "example": "test123"
                }
            }
        },
        "endpoints.LoginResponse": {
            "type": "object",
            "properties": {
                "auth_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1dWlkIj"
                },
                "expired_at": {
                    "type": "string",
                    "example": "2023-11-09T15:21:15.973955426Z"
                }
            }
        },
        "endpoints.RegisterRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 8,
                    "example": "12345678"
                },
                "username": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 5,
                    "example": "test123"
                }
            }
        },
        "endpoints.RegisterResponse": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "example": "test123"
                },
                "uuid": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                }
            }
        },
        "endpoints.UpdateFilmRequest": {
            "type": "object",
            "required": [
                "casts",
                "director",
                "genres",
                "releaseDate",
                "synopsis",
                "title"
            ],
            "properties": {
                "casts": {
                    "type": "array",
                    "maxItems": 10,
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "John Doe",
                        " Jane Doe",
                        " Foo Bar",
                        " Baz Quux"
                    ]
                },
                "director": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 3,
                    "example": "John Doe"
                },
                "genres": {
                    "type": "array",
                    "maxItems": 5,
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "action",
                        "adventure",
                        "sci-fi"
                    ]
                },
                "releaseDate": {
                    "type": "string",
                    "example": "2021-01-01"
                },
                "synopsis": {
                    "type": "string",
                    "maxLength": 1000,
                    "minLength": 10,
                    "example": "This is a synopsis."
                },
                "title": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3,
                    "example": "Garry Potter"
                }
            }
        },
        "endpoints.UpdateFilmResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "$ref": "#/definitions/endpoints.ItemFilm"
                }
            }
        },
        "endpoints.ViewAllFilmsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/endpoints.ItemAllFilms"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/pagination.Pagination"
                }
            }
        },
        "endpoints.ViewFilmResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "$ref": "#/definitions/endpoints.ItemViewFilm"
                }
            }
        },
        "http.HealthCheckResponse": {
            "type": "object",
            "properties": {
                "alive": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "pagination.Pagination": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 20
                },
                "total_count": {
                    "type": "integer",
                    "example": 200
                },
                "total_pages": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "response.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "Bad Request"
                }
            }
        },
        "response.ErrorResponseValidation": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 421
                },
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Validation Error"
                }
            }
        },
        "response.SuccessResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {},
                "message": {
                    "type": "string",
                    "example": "OK"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "x-bearerformat": "Bearer"
        }
    }
}